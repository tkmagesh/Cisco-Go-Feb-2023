Magesh Kuppan

Schedule:
    Commence    : 9:00 AM
    Tea Break   : 10:30 AM (20 mins)
    Lunch Break : 12:30 PM (1 hour)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:00 PM

Methodology:
    No powerpoint
    Lots of assignments

Software Requirements:
    * Go tools (https://go.dev/dl)
    * Visual Studio Code (https://code.visualstudio.com)
    * Go extension for Visual Studio Code (https://marketplace.visualstudio.com/items?itemName=golang.Go)

Repo:
    https://github.com/tkmagesh/cisco-go-feb-2023

Paradox of Choice (Barry Schwartz)

Why Go?
    * Simplified
        ONLY 25 keywords
        - No access modifiers (public, private, protected)
        - No class (only struct)
        - No inheritence (only composition)
        - No reference types (everything is a value in go)
        - No exceptions (only errors)
        - No "try catch finally" construct
        - No pointer arithmatic
        - No implicit type conversion

    * Lightweight
        - Close to hardware
        - Cross compile

    * Concurrency
        - Lightweight Concurrency Model (goroutine)
        - ~4KB (vs 2MB of OS thread)
        - Language support
            ex: go keyword, channel (data type), <- (channel operator), select case, range 
        - Standard Library
            - "sync" package
            - "sync/atomic" package


To run a go program
    go run <file_name.go>

To create a build
    go build <file_name.go>
    go build -o <binary_name> <file_name.go>

To get the list of supported platforms
    go tool dist list

To get the list of environment variables used by the "go" tool
    go env

To set the environment variables
    go env -w <var_1>=<val_1> <var_2>=<val_2>

To cross compile
    go env GOOS GOARCH
    GOOS=windows GOARCH=386 go build <file_name.go>

To do escape analysis
    go run -gcflags="-m" <file_name.go>
    go build -gcflags="-m" <file_name.go>
    

Go Datatypes
    string
    bool

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real[float32] + imaginary[float32])
    complex128 (real[float64] + imaginary[float64])

    byte (alias for uint8)
    rune (alias for int32) (unicode character code point)


Variables
    Function scope
        - can use :=
        - cannot have unused variables
    Package scope
        - cannot use :=
        - can have unused variables
    
Constants
iota
Constructs
    if else
    switch case
    for

functions
    variadic functions
    anonymous functions
    higher order functions (functions are first class citizens)
        - functions can be assigned to variables
        - functions can be passed as arguments
        - functions can be returned as return values

Errors
    - Just values
    - error interface
    - Creation
        * fmt.Errorf()
        * errors.New()

Collections
    - Array
        Fixed size  typesafe collection

    - Slice
        Varying size typesafe collection

    - Map
        typesafe collection of key/value pairs

Modules (Go 1.13)
    GOPATH
        /bin (3rd command line tools are installed)
        /pkg (source code of the 3rd packages were downloaded)
        /src
            /github.com
                /tkmagesh
                    /my-app
    
    go.mod file
        module name
            github.com/tkmagesh/cisco-go-feb-2023/10-modularity-demo

        go version

    To create a mod file
        go mod init <module_name>

    To execute a module
        go run .

    To create a build
        go build .
        go build -o <binary_name> .

    To add a 3rd party package
        go get -u github.com/fatih/color

    to sync the go.mod file
        go mod tidy

    to localize the dependencies 
        go mod vendor

    to install a go binary
        go install <module_name>

    other useful commands
        go mod graph
        go mod why <module_name>

    Reference :
        https://go.dev/ref/mod

Concurrency
    To detect data races (NOTE : do not create a production build with race detector)
        go run -race <program.go>
        go build -race <program.go>